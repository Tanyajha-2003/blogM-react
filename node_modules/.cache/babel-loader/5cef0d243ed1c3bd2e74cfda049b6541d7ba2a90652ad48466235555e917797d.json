{"ast":null,"code":"var _jsxFileName = \"/Users/tanyakumari/Desktop/Blog_App/blog-app/src/components/Search.jsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import React, { useState } from 'react';\n\n// const Search = ({ onSearch }) => {\n//   const [query, setQuery] = useState('');\n\n//   const handleSearch = () => {\n//     onSearch(query);\n//   };\n\n//   return (\n//     <div class=\"searchbar\">\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search by theme\"\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)} \n//       />\n//       <button onClick={handleSearch} >Search</button>\n//     </div>\n//   );\n// };\n// export default Search;\nfunction Blog(props) {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Filter blogs based on the search term\n  const filteredBlogs = props.blogs.filter(blog => blog.theme.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"blog\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search by theme...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), filteredBlogs.map((blog, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: blog.imgURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: blog.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.theme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: blog.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Blog, \"+YdqPTpSlp4r5CWiFEQiF/UjThM=\");\n_c = Blog;\nexport default Blog;\nvar _c;\n$RefreshReg$(_c, \"Blog\");","map":{"version":3,"names":["Blog","props","_s","searchTerm","setSearchTerm","useState","filteredBlogs","blogs","filter","blog","theme","toLowerCase","includes","_jsxDEV","className","children","type","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","map","index","imgURL","title","content","description","_c","$RefreshReg$"],"sources":["/Users/tanyakumari/Desktop/Blog_App/blog-app/src/components/Search.jsx"],"sourcesContent":["// import React, { useState } from 'react';\n\n// const Search = ({ onSearch }) => {\n//   const [query, setQuery] = useState('');\n\n//   const handleSearch = () => {\n//     onSearch(query);\n//   };\n\n//   return (\n//     <div class=\"searchbar\">\n//       <input\n//         type=\"text\"\n//         placeholder=\"Search by theme\"\n//         value={query}\n//         onChange={(e) => setQuery(e.target.value)} \n//       />\n//       <button onClick={handleSearch} >Search</button>\n//     </div>\n//   );\n// };\n// export default Search;\nfunction Blog(props) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  // Filter blogs based on the search term\n  const filteredBlogs = props.blogs.filter(blog =>\n    blog.theme.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"blog\">\n      {/* Search Bar */}\n      <input\n        type=\"text\"\n        placeholder=\"Search by theme...\"\n        value={searchTerm}\n        onChange={(e) => setSearchTerm(e.target.value)}\n      />\n\n      {/* Display filtered blogs */}\n      {filteredBlogs.map((blog, index) => (\n        <div key={index}>\n          <div>{blog.imgURL}</div>\n          <h1>{blog.title}</h1>\n          <p>{blog.content}</p>\n          <p>{blog.theme}</p>\n          <p>{blog.description}</p>\n        </div>\n      ))}\n    </div>\n  );\n}\n\nexport default Blog;\n"],"mappings":";;;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMC,aAAa,GAAGL,KAAK,CAACM,KAAK,CAACC,MAAM,CAACC,IAAI,IAC3CA,IAAI,CAACC,KAAK,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACT,UAAU,CAACQ,WAAW,CAAC,CAAC,CAC5D,CAAC;EAED,oBACEE,OAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAEnBF,OAAA;MACEG,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAoB;MAChCC,KAAK,EAAEf,UAAW;MAClBgB,QAAQ,EAAGC,CAAC,IAAKhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChD,CAAC,EAGDnB,aAAa,CAACoB,GAAG,CAAC,CAACjB,IAAI,EAAEkB,KAAK,kBAC7Bd,OAAA;MAAAE,QAAA,gBACEF,OAAA;QAAAE,QAAA,EAAMN,IAAI,CAACmB;MAAM;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxBZ,OAAA;QAAAE,QAAA,EAAKN,IAAI,CAACoB;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBZ,OAAA;QAAAE,QAAA,EAAIN,IAAI,CAACqB;MAAO;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrBZ,OAAA;QAAAE,QAAA,EAAIN,IAAI,CAACC;MAAK;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBZ,OAAA;QAAAE,QAAA,EAAIN,IAAI,CAACsB;MAAW;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA,GALjBE,KAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAMV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACvB,EAAA,CA9BQF,IAAI;AAAAgC,EAAA,GAAJhC,IAAI;AAgCb,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}